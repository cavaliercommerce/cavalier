name: Deploy

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      gateway-service: ${{ steps.filter.outputs.gateway-service }}
      storefront: ${{ steps.filter.outputs.storefront }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            gateway-service:
              - 'apps/gateway-service/**'
              - 'package.json'
            storefront:
              - 'apps/storefront/**'
              - 'package.json'

  push:
    needs: changes
    strategy:
      matrix:
        service:
          - name: gateway-service
            path: apps/gateway-service
            package: "@cavaliercommerce/gateway-service"
            dockerfile: apps/gateway-service/Dockerfile
          - name: storefront
            path: apps/storefront
            package: "@cavaliercommerce/storefront"
            dockerfile: apps/storefront/Dockerfile

    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Skip check
        if: github.event_name != 'workflow_dispatch' && needs.changes.outputs[matrix.service.name] != 'true'
        run: |
          echo "Skipping ${{ matrix.service.name }} - no relevant changes"
          exit 78

      - uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - run: echo "node_version=$(cat .github/nodejs.version)" >> $GITHUB_ENV

      - name: "Use node ${{ env.node_version }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.node_version }}"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test --filter ${{ matrix.service.package }}

      - name: Build image
        run: docker build . --file ${{ matrix.service.dockerfile }} --tag ${{ matrix.service.name }} --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ matrix.service.name }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ${{ matrix.service.name }} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
